/*
Scrinch is a stand-alone Swing application that helps managing your
projects based on Agile principles.
Copyright (C) 2007  Julien Piaser, Jerome Layat, Peter Fluckiger,
Christian Lebaudy, Jean-Marc Borer
Scrinch is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.
Scrinch is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.
You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package org.scrinch.gui;

import java.util.Collections;
import java.util.List;
import org.scrinch.model.ScrinchEnvToolkit;
import org.scrinch.model.Target;

public class TargetsMainPanel extends javax.swing.JPanel {

    private final ScrinchEnvToolkit toolkit;

    public TargetsMainPanel() {
        this(new ScrinchEnvToolkit());
    }

    public TargetsMainPanel(ScrinchEnvToolkit toolkit) {
        this.toolkit = toolkit;
        initComponents();
        toolkit.addListener(new ScrinchEnvToolkit.Listener() {
            public void preferencesChanged() {
            }
            public void dataLoaded() {
                resetTargetPanels();
            }

            public void dataChanged() {
            }
        });
        resetTargetPanels();
    }

    private void resetTargetPanels() {
        removeAllTargetsPanel();
        updateTargetsPanel();
    }

    private void removeAllTargetsPanel() {
        targetsPanel.removeAll();
        targetsPanel.validate();
    }

    private void updateTargetsPanel() {
        List<Target> targets = toolkit.getTargetFactory().getTargetList();
        Collections.sort(targets);
        for (Target target : targets) {
            addTargetPanel(target);
        }
    }

    private void addTargetPanel(Target target) {
        final TargetPanel targetPanel = new TargetPanel(toolkit);
        targetPanel.setTarget(target, new TargetPanel.Listener() {

            public void removed() {
                targetsPanel.remove(targetPanel);
                resetTargetPanels();
            }

            public void changed() {
                resetTargetPanels();
            }
        });
        targetsPanel.add(targetPanel);
        targetsPanel.updateUI();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        targetsTopPanel = new javax.swing.JPanel();
        addTarget = new javax.swing.JButton();
        jPanel11 = new javax.swing.JPanel();
        jPanel12 = new javax.swing.JPanel();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jScrollPane7 = new javax.swing.JScrollPane();
        targetsPanel = new javax.swing.JPanel();

        setLayout(new java.awt.BorderLayout());

        addTarget.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/scrinch/gui/13-target-mini.png"))); // NOI18N
        addTarget.setText("Add Target");
        addTarget.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addTargetActionPerformed(evt);
            }
        });
        targetsTopPanel.add(addTarget);

        add(targetsTopPanel, java.awt.BorderLayout.NORTH);

        jPanel11.setLayout(new java.awt.BorderLayout());

        jPanel12.setLayout(new java.awt.GridBagLayout());

        jLabel19.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel19.setText("Label");
        jLabel19.setPreferredSize(new java.awt.Dimension(50, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(0, 16, 0, 0);
        jPanel12.add(jLabel19, gridBagConstraints);

        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel20.setText("Description");
        jLabel20.setPreferredSize(new java.awt.Dimension(300, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        jPanel12.add(jLabel20, gridBagConstraints);

        jLabel21.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel21.setText("Deadline");
        jLabel21.setMinimumSize(new java.awt.Dimension(76, 14));
        jLabel21.setPreferredSize(new java.awt.Dimension(76, 14));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.insets = new java.awt.Insets(0, 0, 0, 25);
        jPanel12.add(jLabel21, gridBagConstraints);

        jPanel11.add(jPanel12, java.awt.BorderLayout.NORTH);

        targetsPanel.setLayout(new javax.swing.BoxLayout(targetsPanel, javax.swing.BoxLayout.Y_AXIS));
        jScrollPane7.setViewportView(targetsPanel);

        jPanel11.add(jScrollPane7, java.awt.BorderLayout.CENTER);

        add(jPanel11, java.awt.BorderLayout.CENTER);
    }// </editor-fold>//GEN-END:initComponents

private void addTargetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addTargetActionPerformed
    toolkit.getTargetFactory().createTarget();
    resetTargetPanels();
}//GEN-LAST:event_addTargetActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton addTarget;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JPanel jPanel11;
    private javax.swing.JPanel jPanel12;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JPanel targetsPanel;
    private javax.swing.JPanel targetsTopPanel;
    // End of variables declaration//GEN-END:variables

}
