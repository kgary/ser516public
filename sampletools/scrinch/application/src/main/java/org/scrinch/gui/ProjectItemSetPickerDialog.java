/*
 Scrinch is a stand-alone Swing application that helps managing your
 projects based on Agile principles.
 Copyright (C) 2007  Julien Piaser, Jerome Layat, Peter Fluekiger,
 Christian Lebaudy, Jean-Marc Borer

 Scrinch is free software: you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation, either version 3 of the License, or
 (at your option) any later version.

 Scrinch is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU General Public License for more details.

 You should have received a copy of the GNU General Public License
 along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

package org.scrinch.gui;

import java.awt.event.KeyEvent;
import javax.swing.SwingUtilities;
import org.scrinch.gui.model.ItemSetComboBoxModel;
import org.scrinch.model.ProjectItemSet;
import org.scrinch.model.ScrinchEnvToolkit;

public abstract class ProjectItemSetPickerDialog extends javax.swing.JDialog {

    public ProjectItemSetPickerDialog(java.awt.Frame parent, ScrinchEnvToolkit toolkit) {
        super(parent, true);
        initComponents();
        itemSetComboBox.setModel(new ItemSetComboBoxModel(toolkit));
        ScrinchGuiToolkit.centerFrame(this);
    }
    
    protected ProjectItemSet getSelectedProjectItemSet(){
        ProjectItemSet projectItemSet = null;
        ItemSetComboBoxModel comboModel = (ItemSetComboBoxModel)itemSetComboBox.getModel();
        ItemSetComboBoxModel.ItemSetModel itemSetComboModel = (ItemSetComboBoxModel.ItemSetModel)comboModel.getSelectedItem();
        if(itemSetComboModel!=null){
            projectItemSet = itemSetComboModel.projectItemSet;
        }
        return projectItemSet;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        lbToItemSet = new javax.swing.JLabel();
        itemSetComboBox = new javax.swing.JComboBox();
        validateButton = new javax.swing.JButton();
        lbAffect = new javax.swing.JLabel();
        lbItems = new javax.swing.JLabel();
        cancelButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        getContentPane().setLayout(new java.awt.GridBagLayout());

        lbToItemSet.setText("To project / work :");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        getContentPane().add(lbToItemSet, gridBagConstraints);

        itemSetComboBox.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                itemSetComboBoxComponentResized(evt);
            }
        });
        itemSetComboBox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                itemSetComboBoxKeyPressed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        getContentPane().add(itemSetComboBox, gridBagConstraints);

        validateButton.setText("Ok");
        validateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                validateButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        getContentPane().add(validateButton, gridBagConstraints);

        lbAffect.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        lbAffect.setText("Affect task:");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 0, 5);
        getContentPane().add(lbAffect, gridBagConstraints);

        lbItems.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lbItems.setText("##NO ITEM##");
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.fill = java.awt.GridBagConstraints.BOTH;
        gridBagConstraints.insets = new java.awt.Insets(5, 0, 0, 0);
        getContentPane().add(lbItems, gridBagConstraints);

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.insets = new java.awt.Insets(5, 5, 5, 5);
        getContentPane().add(cancelButton, gridBagConstraints);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        this.dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void validateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_validateButtonActionPerformed
        itemSetPickerValidation();
    }//GEN-LAST:event_validateButtonActionPerformed

    private void itemSetComboBoxKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_itemSetComboBoxKeyPressed
        if(evt.getKeyCode()== KeyEvent.VK_TAB){
            validateButton.requestFocus();
        } else if(evt.getKeyCode() == KeyEvent.VK_ENTER){
            itemSetPickerValidation();
        }
    }//GEN-LAST:event_itemSetComboBoxKeyPressed

    private void itemSetComboBoxComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_itemSetComboBoxComponentResized
        SwingUtilities.invokeLater(new Runnable(){
            public void run(){
                itemSetComboBox.showPopup();
            }
        });
    }//GEN-LAST:event_itemSetComboBoxComponentResized

    protected abstract void itemSetPickerValidation();    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancelButton;
    protected javax.swing.JComboBox itemSetComboBox;
    private javax.swing.JLabel lbAffect;
    protected javax.swing.JLabel lbItems;
    private javax.swing.JLabel lbToItemSet;
    private javax.swing.JButton validateButton;
    // End of variables declaration//GEN-END:variables

}
