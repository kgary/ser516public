/*
Scrinch is a stand-alone Swing application that helps managing your
projects based on Agile principles.
Copyright (C) 2007  Julien Piaser, Jerome Layat, Peter Fluekiger,
Christian Lebaudy, Jean-Marc Borer

Scrinch is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

Scrinch is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
package org.scrinch.gui;

import java.awt.Window;
import javax.swing.JOptionPane;
import javax.swing.SwingUtilities;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import org.scrinch.model.AbstractType;

public class TypePanel extends javax.swing.JPanel {

    public interface Listener{
        void removed(TypePanel panel);
    }

    private AbstractType dataType;
    private final Listener listener;

    public TypePanel(Listener listener, AbstractType dataType) {
        this.listener = listener;
        this.dataType = dataType;
        initComponents();
        resetFields();
        this.labelTextField.getDocument().addDocumentListener(new DocumentListener() {
            public void insertUpdate(DocumentEvent e) {
                TypePanel.this.dataType.setLabel(labelTextField.getText());
            }
            public void removeUpdate(DocumentEvent e) {
                TypePanel.this.dataType.setLabel(labelTextField.getText());
            }
            public void changedUpdate(DocumentEvent e) {
                TypePanel.this.dataType.setLabel(labelTextField.getText());
            }
        });
        this.descriptionTextField.getDocument().addDocumentListener(new DocumentListener() {
            public void insertUpdate(DocumentEvent e) {
                TypePanel.this.dataType.setDescription(descriptionTextField.getText());
            }
            public void removeUpdate(DocumentEvent e) {
                TypePanel.this.dataType.setDescription(descriptionTextField.getText());
            }
            public void changedUpdate(DocumentEvent e) {
                TypePanel.this.dataType.setDescription(descriptionTextField.getText());
            }
        });
    }

    public AbstractType getDataType(){
        return this.dataType;
    }

    private void resetFields() {
        labelTextField.setText(dataType.getLabel());
        descriptionTextField.setText(dataType.getDescription());
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        labelTextField = new javax.swing.JTextField();
        descriptionTextField = new javax.swing.JTextField();
        btRemove = new javax.swing.JButton();

        setMaximumSize(new java.awt.Dimension(2147483647, 24));
        setLayout(new java.awt.GridBagLayout());

        labelTextField.setMinimumSize(new java.awt.Dimension(100, 23));
        labelTextField.setPreferredSize(new java.awt.Dimension(120, 23));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 0.5;
        gridBagConstraints.insets = new java.awt.Insets(0, 2, 0, 2);
        add(labelTextField, gridBagConstraints);

        descriptionTextField.setMinimumSize(new java.awt.Dimension(50, 20));
        descriptionTextField.setPreferredSize(new java.awt.Dimension(100, 23));
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.fill = java.awt.GridBagConstraints.HORIZONTAL;
        gridBagConstraints.weightx = 1.0;
        gridBagConstraints.insets = new java.awt.Insets(2, 2, 2, 2);
        add(descriptionTextField, gridBagConstraints);

        btRemove.setIcon(new javax.swing.ImageIcon(getClass().getResource("/org/scrinch/gui/edit-delete.png"))); // NOI18N
        btRemove.setToolTipText("Remove this member");
        btRemove.setMaximumSize(new java.awt.Dimension(20, 20));
        btRemove.setMinimumSize(new java.awt.Dimension(20, 20));
        btRemove.setPreferredSize(new java.awt.Dimension(20, 20));
        btRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btRemoveActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 0;
        add(btRemove, gridBagConstraints);
    }// </editor-fold>//GEN-END:initComponents

    private void btRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btRemoveActionPerformed
        String message = "NB : checked types will be removed. Related item types will be set to Undefined.";
        Window window = SwingUtilities.windowForComponent(this);
        int r = JOptionPane.showConfirmDialog(window, "Are you sur you cant to remove: "+dataType.getLabel()+
                " ?\n\n"+message, "Confirmation", JOptionPane.OK_CANCEL_OPTION, JOptionPane.WARNING_MESSAGE);
        if( r==JOptionPane.OK_OPTION ){
            this.listener.removed(this);
        }
}//GEN-LAST:event_btRemoveActionPerformed
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btRemove;
    private javax.swing.JTextField descriptionTextField;
    private javax.swing.JTextField labelTextField;
    // End of variables declaration//GEN-END:variables
}
