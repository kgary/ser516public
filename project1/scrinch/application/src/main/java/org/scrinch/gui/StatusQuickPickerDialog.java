/*
 Scrinch is a stand-alone Swing application that helps managing your
 projects based on Agile principles.
 Copyright (C) 2007  Julien Piaser, Jerome Layat, Peter Fluekiger,
 Christian Lebaudy, Jean-Marc Borer

 Scrinch is free software: you can redistribute it and/or modify
 it under the terms of the GNU General Public License as published by
 the Free Software Foundation, either version 3 of the License, or
 (at your option) any later version.

 Scrinch is distributed in the hope that it will be useful,
 but WITHOUT ANY WARRANTY; without even the implied warranty of
 MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 GNU General Public License for more details.

 You should have received a copy of the GNU General Public License
 along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

package org.scrinch.gui;

import org.scrinch.gui.model.StatusComboBoxModel;
import java.awt.Dimension;
import java.awt.Insets;
import java.awt.Point;
import java.awt.event.KeyEvent;
import javax.swing.JButton;
import org.scrinch.model.Item;
import org.scrinch.model.ScrinchEnvToolkit;
import org.scrinch.model.ScrinchException;

public class StatusQuickPickerDialog extends javax.swing.JDialog {

    private JButton originator;
    private Item item;
    
    private Insets insets;
    private StatusComboBoxModel model;

    private final ScrinchEnvToolkit toolkit;
    
    public StatusQuickPickerDialog(java.awt.Frame parent, JButton originator, Item item, ScrinchEnvToolkit toolkit) {
        super(parent, false);
        initComponents();
        this.toolkit = toolkit;
        this.originator = originator;
        this.item = item;
            
        insets = jScrollPane1.getInsets();
        
        model = new StatusComboBoxModel(item, true);
        statusList.setModel(model);
    }
    
    @Override
    public void setVisible(boolean visible){
        if(visible){
            model.checkUpdates();
            
            Point statusButtonLocation = originator.getLocationOnScreen();
            Dimension statusButtonSize = originator.getSize();
            setLocation(statusButtonLocation.x-insets.left,statusButtonLocation.y+statusButtonSize.height);        
            setSize(new Dimension(statusButtonSize.width+insets.right+insets.left,
                              insets.bottom+insets.top+statusList.getMinimumSize().height)); 
        }
        super.setVisible(visible);
    }
    
    private void addNewStatusAndClose(){
        try{
            if(statusList.getSelectedValue()!=null){
                item.addVisa(new Item.Visa((Item.Status)statusList.getSelectedValue(), 
                                           toolkit.getMemberFactory().getScrumMaster(),
                                           toolkit.getCurrentDate(),
                                           ""));
            }
        }catch(ScrinchException se){
        }
        this.setVisible(false);
    }
    
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        statusList = new javax.swing.JList();

        setUndecorated(true);

        statusList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        statusList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                statusListMouseClicked(evt);
            }
        });
        statusList.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                statusListFocusLost(evt);
            }
        });
        statusList.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                statusListKeyReleased(evt);
            }
        });
        jScrollPane1.setViewportView(statusList);

        getContentPane().add(jScrollPane1, java.awt.BorderLayout.CENTER);

        pack();
    }// </editor-fold>//GEN-END:initComponents

private void statusListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_statusListMouseClicked
    addNewStatusAndClose();
}//GEN-LAST:event_statusListMouseClicked

private void statusListFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_statusListFocusLost
    this.setVisible(false);
}//GEN-LAST:event_statusListFocusLost

    private void statusListKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_statusListKeyReleased
        switch(evt.getKeyCode()){
            case KeyEvent.VK_ENTER:
            case KeyEvent.VK_SPACE: addNewStatusAndClose();
        }
    }//GEN-LAST:event_statusListKeyReleased

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList statusList;
    // End of variables declaration//GEN-END:variables

}
